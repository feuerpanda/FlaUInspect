<Window x:Class="FlaUInspect.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d"
        xmlns:conv="clr-namespace:FlaUInspect.Converters"
        xmlns:models="clr-namespace:FlaUInspect.Models"
        xmlns:flauidef="clr-namespace:FlaUI.Core.Definitions;assembly=FlaUI.Core"
        xmlns:viewModels="clr-namespace:FlaUInspect.ViewModels"
        Title="FlaUInspect"
        d:DesignHeight="600"
        d:DesignWidth="800"
        d:LayoutOverrides="Width, Height"
        ResizeMode="CanResizeWithGrip"
        d:DataContext="{d:DesignInstance Type={x:Type viewModels:MainViewModel}}">
    <Window.Resources>
        <Style x:Key="SelectableLabel" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsReadOnly" Value="True" />
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <ContextMenu x:Key="ElementContextMenu"
                     d:DataContext="{d:DesignInstance Type={x:Type viewModels:ElementViewModel}}">
            <MenuItem Header="Highlight" Command="{Binding HighlightCommand}" />
            <Separator />
            <MenuItem Header="Focus" Command="{Binding FocusCommand}" />
            <Separator />
            <MenuItem Header="Click" Command="{Binding ClickCommand}" />
            <MenuItem Header="Double Click" Command="{Binding DoubleClickCommand}" />
            <MenuItem Header="Right Click" Command="{Binding RightClickCommand}" />
        </ContextMenu>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding StartNewInstanceCommand}" />
        <KeyBinding Key="F4" Command="{Binding CaptureSelectedItemToClipboard}" />
        <KeyBinding Modifiers="Shift" Key="F4" Command="{Binding SaveCaptureSelectedItemCommand}" />
        <KeyBinding Key="F2" Command="{Binding SwitchHoverModeCommand}" />
        <KeyBinding Modifiers="Shift" Key="F2" Command="{Binding SwitchFocusModeCommand}" />
        <KeyBinding Key="F3" Command="{Binding SwitchXPathModeCommand}" />
    </Window.InputBindings>
    <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_New Instance" Command="{Binding StartNewInstanceCommand}"
                              InputGestureText="Ctrl+N" />
                    <MenuItem Header="_Copy capture of selected item"
                              Command="{Binding CaptureSelectedItemToClipboard}" InputGestureText="F4" />
                    <MenuItem Header="_Save capture of selected item as..."
                              Command="{Binding SaveCaptureSelectedItemCommand}" InputGestureText="Shift+F4" />
                    <MenuItem Header="_Refresh" Command="{Binding RefreshCommand}" InputGestureText="F5" />
                    <Separator />
                    <MenuItem Header="E_xit" Click="MenuItem_Click" />
                </MenuItem>
                <MenuItem Header="_Mode">
                    <MenuItem Header="H_over Mode (use Ctrl)" IsCheckable="True" IsChecked="{Binding EnableHoverMode}"
                              InputGestureText="F2" />
                    <MenuItem Header="_Focus Tracking" IsCheckable="True" IsChecked="{Binding EnableFocusTrackingMode}"
                              InputGestureText="Shift+F2" />
                    <MenuItem Header="Show _XPath" IsCheckable="True" IsChecked="{Binding EnableXPath}"
                              InputGestureText="F3" />
                    <MenuItem Header="Highlight on _selection" IsCheckable="True"
                              IsChecked="{Binding EnableHighlightOnSelectionChanged}" />
                </MenuItem>
            </Menu>
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBarItem>
                    <Label Content="{Binding SelectedAutomationType, FallbackValue=None}" />
                </StatusBarItem>
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding EnableXPath, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Label>XPath:</Label>
                        <TextBox VerticalAlignment="Center">
                            <TextBox.Style>
                                <Style BasedOn="{StaticResource SelectableLabel}" TargetType="{x:Type TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EnableXPath}" Value="True">
                                            <Setter Property="Text"
                                                    Value="{Binding SelectedItemInTree.XPath, FallbackValue=None, Mode=OneWay}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Stretch"
                                Margin="0,0,20,0">
                        <ToggleButton IsChecked="{Binding EnableHoverMode}"
                                      BorderThickness="0"
                                      Padding="8,2"
                                      Content="_H"
                                      ToolTip="Hover mode"
                                      Background="{Binding EnableHoverMode, Converter={conv:BoolToBrushConverter TrueValue=LawnGreen}}" />
                        <ToggleButton IsChecked="{Binding EnableFocusTrackingMode}"
                                      BorderThickness="0"
                                      Padding="8,2"
                                      Content="_F"
                                      ToolTip="Focus mode"
                                      Background="{Binding EnableFocusTrackingMode, Converter={conv:BoolToBrushConverter TrueValue=LawnGreen}}" />
                        <ToggleButton IsChecked="{Binding EnableHighlightOnSelectionChanged}"
                                      BorderThickness="0"
                                      Padding="8,2"
                                      Content="_S"
                                      Background="{Binding EnableFocusTrackingMode, Converter={conv:BoolToBrushConverter TrueValue=LawnGreen}}"
                                      ToolTip="Highlight on selection mode" />
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
            <Grid DockPanel.Dock="Bottom"
                  DataContext="{Binding Source={x:Static viewModels:ErrorsLogsViewModel.Instance}}">
                <GroupBox Header="Errors">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Visible"
                                  Height="100">
                        <ItemsControl ItemsSource="{Binding Logs}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ErrorLog}">
                                    <DockPanel>
                                        <TextBox Text="{Binding CallerName, Mode=OneWay}"
                                                 IsReadOnly="True"
                                                 TextWrapping="WrapWithOverflow" />
                                        <TextBox Text="{Binding Text, Mode=OneWay}"
                                                 IsReadOnly="True"
                                                 TextWrapping="WrapWithOverflow" />
                                    </DockPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </GroupBox>
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <GroupBox Header="{Binding SelectedAutomationType, FallbackValue=None}" Grid.Column="0">
                    <TreeView ItemsSource="{Binding Elements}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ElementContextMenu}" />
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <EventSetter Event="Selected" Handler="TreeViewSelectedHandler" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Children}"
                                                      DataType="{x:Type models:Element}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16" Height="16" Margin="0,0,5,0">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Button}">
                                                        <Setter Property="Source" Value="/Resources/Button.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Calendar}">
                                                        <Setter Property="Source" Value="/Resources/Calendar.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.CheckBox}">
                                                        <Setter Property="Source" Value="/Resources/CheckBox.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.ComboBox}">
                                                        <Setter Property="Source" Value="/Resources/ComboBox.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Custom}">
                                                        <Setter Property="Source" Value="/Resources/Custom.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.DataGrid}">
                                                        <Setter Property="Source" Value="/Resources/DataGrid.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.DataItem}">
                                                        <Setter Property="Source" Value="/Resources/Item.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Document}">
                                                        <Setter Property="Source" Value="/Resources/Document.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Edit}">
                                                        <Setter Property="Source" Value="/Resources/Edit.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Group}">
                                                        <Setter Property="Source" Value="/Resources/Group.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Header}">
                                                        <Setter Property="Source" Value="/Resources/Header.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.HeaderItem}">
                                                        <Setter Property="Source" Value="/Resources/HeaderItem.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Hyperlink}">
                                                        <Setter Property="Source" Value="/Resources/Hyperlink.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Image}">
                                                        <Setter Property="Source" Value="/Resources/Image.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.List}">
                                                        <Setter Property="Source" Value="/Resources/List.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.ListItem}">
                                                        <Setter Property="Source" Value="/Resources/Item.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Menu}">
                                                        <Setter Property="Source" Value="/Resources/Menu.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.MenuBar}">
                                                        <Setter Property="Source" Value="/Resources/Menu.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.MenuItem}">
                                                        <Setter Property="Source" Value="/Resources/MenuItem.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Pane}">
                                                        <Setter Property="Source" Value="/Resources/Pane.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.ProgressBar}">
                                                        <Setter Property="Source" Value="/Resources/ProgressBar.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.RadioButton}">
                                                        <Setter Property="Source" Value="/Resources/RadioButton.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.ScrollBar}">
                                                        <Setter Property="Source" Value="/Resources/ScrollBar.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Slider}">
                                                        <Setter Property="Source" Value="/Resources/Slider.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Spinner}">
                                                        <Setter Property="Source" Value="/Resources/Spinner.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.SplitButton}">
                                                        <Setter Property="Source" Value="/Resources/SplitButton.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.StatusBar}">
                                                        <Setter Property="Source" Value="/Resources/StatusBar.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Tab}">
                                                        <Setter Property="Source" Value="/Resources/Tab.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.TabItem}">
                                                        <Setter Property="Source" Value="/Resources/Item.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Text}">
                                                        <Setter Property="Source" Value="/Resources/Text.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Thumb}">
                                                        <Setter Property="Source" Value="/Resources/Thumb.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.TitleBar}">
                                                        <Setter Property="Source" Value="/Resources/TitleBar.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.ToolBar}">
                                                        <Setter Property="Source" Value="/Resources/ToolBar.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.ToolTip}">
                                                        <Setter Property="Source" Value="/Resources/ToolTip.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Tree}">
                                                        <Setter Property="Source" Value="/Resources/Tree.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.TreeItem}">
                                                        <Setter Property="Source" Value="/Resources/Item.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ControlType}"
                                                                 Value="{x:Static flauidef:ControlType.Window}">
                                                        <Setter Property="Source" Value="/Resources/Window.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} &quot;{1}&quot; &quot;{2}&quot;">
                                                <Binding Path="ControlType" />
                                                <Binding Path="Name" />
                                                <Binding Path="AutomationId" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </GroupBox>
                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />
                <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="2">
                    <GroupBox Header="Details">
                        <ItemsControl ItemsSource="{Binding SelectedItemDetails}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="viewModels:DetailGroupViewModel">
                                    <Expander Header="{Binding Name}" IsExpanded="True">
                                        <ItemsControl ItemsSource="{Binding Details}" Grid.IsSharedSizeScope="True">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"
                                                                              SharedSizeGroup="DetailColumnKey" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBox Grid.Column="0" IsReadOnly="True" Text="{Binding Key}">
                                                            <TextBox.Style>
                                                                <Style BasedOn="{StaticResource SelectableLabel}"
                                                                       TargetType="{x:Type TextBox}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Important}"
                                                                            Value="True">
                                                                            <Setter Property="FontWeight" Value="Bold" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                        <TextBox Grid.Column="1" IsReadOnly="True"
                                                                 Text="{Binding Value}" Margin="5,0,0,0">
                                                            <TextBox.Style>
                                                                <Style BasedOn="{StaticResource SelectableLabel}"
                                                                       TargetType="{x:Type TextBox}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Value}"
                                                                            Value="No">
                                                                            <Setter Property="TextBox.Foreground"
                                                                                Value="Red" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Value}"
                                                                            Value="Yes">
                                                                            <Setter Property="TextBox.Foreground"
                                                                                Value="Green" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Expander>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </GroupBox>
                </ScrollViewer>
            </Grid>
        </DockPanel>
    </Grid>
</Window>